steps:
  # Step 1: Build the Docker image from the Dockerfile and tag it with the commit SHA
  - name: 'docker:24.0.2'
    args:
      - 'build'
      - '--tag'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/my-app/my-app:$COMMIT_SHA'  # Replace 'my-app' with your preferred repository name
      - '.'

  # Step 2: Push the Docker image to Google Container Registry (GCR)
  - name: 'docker:24.0.2'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/my-app/my-app:$COMMIT_SHA'  # Push image to GCR

  # Step 3: SSH into the VM instance using IAP and deploy the Docker image
  - name: 'google/cloud-sdk:latest'
    entrypoint: 'gcloud'
    args:
      - 'compute'
      - 'ssh'
      - '--project'
      - '$PROJECT_ID'
      - '--zone'
      - 'us-central1-c'  # Replace with your desired zone
      - '--tunnel-through-iap'
      - '--command'
      - |
          gcloud auth configure-docker us-central1-docker.pkg.dev
          docker pull us-central1-docker.pkg.dev/$PROJECT_ID/my-app/my-app:$COMMIT_SHA
          echo $(gcloud secrets versions access latest --secret="pubsub_creds") > creds.json
          docker run -d --name my-app-container -v /home/debian/creds.json:/creds.json us-central1-docker.pkg.dev/$PROJECT_ID/my-app/my-app:$COMMIT_SHA
          
          #clean up the ssh keys used for this run
          sed -i "/$(printf '%s' "$(grep -A 1 'ssh-rsa' /home/debian/.ssh/authorized-keys | tail -n 1)" | sed 's/[&/\]/\\&/g')/d" /home/debian/.ssh/authorized-keys
      - 'debian@magic-progress-note'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=us-central1'
      - 'CLOUDSDK_CORE_PROJECT=$PROJECT_ID'


images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/my-app/my-app:$COMMIT_SHA'  # Push image to GCR
options:
  logging: CLOUD_LOGGING_ONLY 
